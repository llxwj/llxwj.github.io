<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>llxwj</title>
    <link>http://llxwj.github.io/</link>
    <description>Recent content on llxwj</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 28 Oct 2015 09:03:11 +0800</lastBuildDate>
    <atom:link href="http://llxwj.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Wireshark使用方法</title>
      <link>http://llxwj.github.io/post/wireshark_usage/</link>
      <pubDate>Wed, 28 Oct 2015 09:03:11 +0800</pubDate>
      
      <guid>http://llxwj.github.io/post/wireshark_usage/</guid>
      <description>

&lt;h2 id=&#34;一站式学习wireshark:ac986bb9732f6c9f1ccb7273506fe224&#34;&gt;一站式学习Wireshark&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://community.emc.com/message/818739#818739&#34;&gt;原始链接 EMC中文支持论坛&lt;/a&gt;打开速度有点慢，是
HTTPS的，但是比较全。下面是伯乐博客的转载，打开速度比较快：&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.jobbole.com/70907/&#34;&gt;一:Wireshark基本用法&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.jobbole.com/70919/&#34;&gt;二:应用Wireshark观察基本网络协议&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.jobbole.com/70929/&#34;&gt;三:应用Wireshark IO图形工具分析数据流&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.jobbole.com/71427/&#34;&gt;四:网络性能排查之TCP重传与重复ACK&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;TCP窗口与拥塞处理&#34;&gt;五:TCP窗口与拥塞处理&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.jobbole.com/73477/&#34;&gt;六:狙击网络高延时点&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.jobbole.com/73482/&#34;&gt;七:Statistics统计工具功能详解与应用&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.jobbole.com/74018/&#34;&gt;八:应用Wireshark过滤条件抓取特定数据流&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;wireshark中的数据快速转变为c数组进行分析:ac986bb9732f6c9f1ccb7273506fe224&#34;&gt;Wireshark中的数据快速转变为C数组进行分析&lt;/h2&gt;

&lt;p&gt;在Wireshark中抓取到数据包的时候,如果是私有数据协议的,那么就需要到数据进行分析,
为了配合分析,一般会定义相应数据的C结构体,这时候,为了验证是否正确,需要把数据包
的数据导入到代码中进行解码, 每次频繁操作确实麻烦,这里发现一个小的技巧,可以快速
的拿到数据.&lt;/p&gt;

&lt;p&gt;如我们要拿到下图中选中的UDP数据包中包含的8个字节的数据:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../../image/wireshark_usage/udp_package.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;在Data哪一项中右击,按下图弹出的菜单选项复制数据:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../../image/wireshark_usage/copy_package_data.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;然后打开WinHex,新建一个空白文件,在Offset 0处,点击右键,弹出菜单选择&amp;rdquo;编辑&amp;rdquo;,再在
弹出的菜单中选择&amp;rdquo;剪切板数据&amp;hellip;&amp;ldquo;,再选择&amp;rdquo;粘贴&amp;rdquo;,再弹出的对话框中选择&amp;rdquo;确定&amp;rdquo;即可,
这时弹出下面的对话框,选择&amp;rdquo;ASCII Hex&amp;rdquo;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../../image/wireshark_usage/winhex_paste.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;之后数据为下图:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../../image/wireshark_usage/winhex_display.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;选中这8个字节数据后,点击右键,选择&amp;rdquo;编辑&amp;rdquo;-&amp;gt;&amp;ldquo;复制选块&amp;rdquo;-&amp;gt;&amp;ldquo;C 源码&amp;rdquo;,然后到代码编辑器
中,点击&amp;rdquo;粘贴&amp;rdquo;,这样数据就复制过来了,可以转换为结构体指针,进行快速解码了.如果结
构体成员非常多,这样很便利.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;unsigned char data[8] = {
    0x0A, 0x0A, 0x07, 0x4E, 0x3B, 0xC0, 0x00, 0x00
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;但是我觉得像Wireshark这样的工具应该有插件机制或者其他的方法技巧,可以直接做到,
只是我不知道而已.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>在Linux下通过网络接收串口打印</title>
      <link>http://llxwj.github.io/post/through_the_network_to_receive_serial_print_in_linux/</link>
      <pubDate>Tue, 27 Oct 2015 14:04:17 +0800</pubDate>
      
      <guid>http://llxwj.github.io/post/through_the_network_to_receive_serial_print_in_linux/</guid>
      <description>&lt;p&gt;嵌入式开发中我们经常需要对平台的串口打印数据进行采集，便于分析程序的运行行为，
确定软件的运行流程，对软件的问题进行故障定位等。串口数据的输出目前主流的波特率
配置是115200，如果打印太多的数据，会拖慢程序的运行，导致为了采集数据，而要等待
很长的时间。&lt;/p&gt;

&lt;p&gt;这里有一种办法可以通过网络采集串口打印，这样能节省非常多的等待时间，但是嵌入式
软件平台必须是Linux的。这里用到的Linux工具是nc命令。先在工作主机上用nc命令建立
一个端口监听：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nc -l &amp;lt;端口号&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;nc监听的时候默认是用eth0监听的，如果有多个网卡，可以用如下的命令进行监听：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nc -l &amp;lt;网卡的IP地址&amp;gt; &amp;lt;端口号&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在嵌入式平台上，启动软件之前，用重定向的方法将stdout的数据重定向到工作主机上的
监听端口：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./program | nc &amp;lt;工作主机的IP地址&amp;gt; &amp;lt;端口号&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;程序的打印可以输出到stdout与stderr，为了能捕获stderr的打印，需要在程序运行时将
stderr也重定向到stdout：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./program 2 &amp;gt; 1 | nc &amp;lt;工作主机的IP地址&amp;gt; &amp;lt;端口号&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样当嵌入式软件启动后，在工作主机启动nc监听命令的终端窗口中会看到本是输出到串
口的打印，当数据非常多的时候，为了便于处理，应该将终端中捕获到的串口数据输出到
文件中，这时需要Linux的tee命令，只是在监听的时候，需要这样做：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nc -l 12345 | tee serial.log
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;现在感觉Linux的管道真的是太方便，非常强大，可以随意组合，能完成很多意想不到的
功能。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Git技巧记录</title>
      <link>http://llxwj.github.io/post/git/</link>
      <pubDate>Sun, 18 Oct 2015 16:16:35 +0800</pubDate>
      
      <guid>http://llxwj.github.io/post/git/</guid>
      <description>

&lt;h2 id=&#34;让git忽略ssl证书异常技巧:1c1ef82aae62aeea8eedcb5f455b129b&#34;&gt;让Git忽略SSL证书异常技巧&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.myexception.cn/operating-system/1594593.html&#34;&gt;复制源&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;当你通过HTTPS访问Git远程仓库，如果服务器的SSL证书未经过第三方机构签署，那么Git就会报错。这是十分合理的设计，毕竟未知的没有签署过的证书意味着很大安全风险。但是，如果你正好在架设Git服务器，而正式的SSL证书没有签发下来，你为了赶时间生成了自签署的临时证书，怎样才是最便捷的测试手段。&lt;/p&gt;

&lt;p&gt;本文记录一种比较好的做法：&lt;/p&gt;

&lt;p&gt;第一步，克隆远程仓库时，用env命令设置GIT_SSL_NO_VERIFY环境变量为&amp;rdquo;ture&amp;rdquo;，并同时调用正常的git clone命令。完整的命令如下：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;env GIT_SSL_NO_VERIFY=true git clone https://&amp;lt;host_name/git/project.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;第二步，在克隆完毕的仓库中将http.sslVerify设置为&amp;rdquo;false&amp;rdquo;。完整的命令如下：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git config http.sslVerify &amp;quot;false&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;点评：
以上方法应该是Git处理可信任的SSL临时证书很好的方法，第一步使用env命令保证了忽略证书错误是单次行为，不会成为默认的设置。第二次，则把忽略证书错误的设置限定在特定的仓库，避免扩大该设置的适用范围而引起的潜在安全风险。&lt;/p&gt;

&lt;h2 id=&#34;git关闭换行符自动转换:1c1ef82aae62aeea8eedcb5f455b129b&#34;&gt;Git关闭换行符自动转换&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git config --global core.autocrlf false
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;git提交时检查是否混用了不同风格的换行符:1c1ef82aae62aeea8eedcb5f455b129b&#34;&gt;Git提交时检查是否混用了不同风格的换行符&lt;/h2&gt;

&lt;p&gt;core.safecrlf此配置选项的功能如下：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;false - 不做任何检查
warn - 在提交时检查并警告
true - 在提交时检查，如果发现混用则拒绝提交

git config --global core.safecrlf true
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;将某个文件恢复到指定的版本:1c1ef82aae62aeea8eedcb5f455b129b&#34;&gt;将某个文件恢复到指定的版本&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git checkout &amp;lt;6位开头的sha1编码&amp;gt; &amp;lt;path/to/file&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;查看某个文件的修改历史:1c1ef82aae62aeea8eedcb5f455b129b&#34;&gt;查看某个文件的修改历史&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git log --pretty=online 文件名称
git show &amp;lt;SHA Code&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Linux环境配置</title>
      <link>http://llxwj.github.io/post/linux/</link>
      <pubDate>Sat, 17 Oct 2015 07:17:05 +0800</pubDate>
      
      <guid>http://llxwj.github.io/post/linux/</guid>
      <description>

&lt;h2 id=&#34;目前开发系统的软件环境:34fe9f2d9cc3cd7e319ca75e7da08332&#34;&gt;目前开发系统的软件环境&lt;/h2&gt;

&lt;p&gt;软件环境&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install bison flex libncurses5-dev libncursesw5-dev 
sudo apt-get install zlib1g-dev
sudo apt-get install nfs-kernel-server openssh-server 
sudo apt-get install vim vim-gtk ctags
sudo apt-get install meld dia minicom searchmonkey
sudo apt-get install regexxer
sudo apt-get install curl
sudo apt-get install libxv-dev(for sdl1.2.15)
sudo apt-get install git-cola
sudo apt-get install wine
qtcreator(binary)
golang(binary)
liteide(binary) 
sdl 1.2.15(source,configure/make/make install)
sdl_ttf 2.0.11(source,configure/make/make install)
freetype 2.6(source,configure/make/make install)
libdvbpsi 2.0.0(source,configure/make/make install)
cunit 2.1.3(source,aclocal/autoconf/autoheader/automake/configure/make/make install)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;编译SDL时遇到如下的问题:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;libtool: compile:  gcc -g -O2 -I./include -D_GNU_SOURCE=1 -fvisibility=hidden -DXTHREADS -D_REENTRANT -DHAVE_LINUX_VERSION_H -Wall -c ./src/video/x11/SDL_x11dga.c  -fPIC -DPIC -o build/.libs/SDL_x11dga.o
In file included from ./src/video/x11/SDL_x11video.h:50:0,
                 from ./src/video/x11/SDL_x11dga_c.h:24,
                 from ./src/video/x11/SDL_x11dga.c:30:
./src/video/x11/SDL_x11dyn.h:45:33: fatal error: X11/extensions/XShm.h: No such file or directory
 #include &amp;lt;X11/extensions/XShm.h&amp;gt;
                                 ^
compilation terminated.
make: *** [build/SDL_x11dga.lo] Error 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;通过如下的方法安装一个开发包,然后再次编译就正常了.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/sdl/SDL-1.2.15 $ sudo apt-get install libxv-dev
Reading package lists... Done
Building dependency tree       
Reading state information... Done
The following extra packages will be installed:
  libxext-dev x11proto-video-dev x11proto-xext-dev
Suggested packages:
  libxext-doc
The following NEW packages will be installed:
  libxext-dev libxv-dev x11proto-video-dev x11proto-xext-dev
0 upgraded, 4 newly installed, 0 to remove and 146 not upgraded.
Need to get 342 kB of archives.
After this operation, 1,414 kB of additional disk space will be used.
Do you want to continue? [Y/n] y
Get:1 http://archive.ubuntu.com/ubuntu/ trusty/main x11proto-xext-dev all 7.3.0-1 [212 kB]
Get:2 http://archive.ubuntu.com/ubuntu/ trusty-updates/main libxext-dev i386 2:1.3.2-1ubuntu0.0.14.04.1 [79.8 kB]
Get:3 http://archive.ubuntu.com/ubuntu/ trusty/main x11proto-video-dev all 2.3.2-1 [17.5 kB]
Get:4 http://archive.ubuntu.com/ubuntu/ trusty/main libxv-dev i386 2:1.0.10-1 [32.1 kB]
Fetched 342 kB in 6s (54.8 kB/s)                                               
Selecting previously unselected package x11proto-xext-dev.
(Reading database ... 181064 files and directories currently installed.)
Preparing to unpack .../x11proto-xext-dev_7.3.0-1_all.deb ...
Unpacking x11proto-xext-dev (7.3.0-1) ...
Selecting previously unselected package libxext-dev:i386.
Preparing to unpack .../libxext-dev_2%3a1.3.2-1ubuntu0.0.14.04.1_i386.deb ...
Unpacking libxext-dev:i386 (2:1.3.2-1ubuntu0.0.14.04.1) ...
Selecting previously unselected package x11proto-video-dev.
Preparing to unpack .../x11proto-video-dev_2.3.2-1_all.deb ...
Unpacking x11proto-video-dev (2.3.2-1) ...
Selecting previously unselected package libxv-dev:i386.
Preparing to unpack .../libxv-dev_2%3a1.0.10-1_i386.deb ...
Unpacking libxv-dev:i386 (2:1.0.10-1) ...
Processing triggers for man-db (2.6.7.1-1ubuntu1) ...
Setting up x11proto-xext-dev (7.3.0-1) ...
Setting up libxext-dev:i386 (2:1.3.2-1ubuntu0.0.14.04.1) ...
Setting up x11proto-video-dev (2.3.2-1) ...
Setting up libxv-dev:i386 (2:1.0.10-1) ...
/sdl/SDL-1.2.15 $
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在安装cunit时遇到&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;configure.in:211: error: required file &#39;config.h.in&#39; not found
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;解决方法是在执行&lt;code&gt;automake --add-missing&lt;/code&gt;之前执行autoheader,生成config.h.in&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sed: can&#39;t read ./ltmain.sh: No such file or directory
sed: can&#39;t read libtoolT: No such file or directory
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;解决方法是直接执行./bootstrap,实际上面的繁琐步骤可以用bootstrap/make/make install 替代.
默认执行make install后,没有安装到系统的/usr/local目录下,是安装到
/home/user/CUnitHome下了.可以将include/lib/pkgconfig/目录下的文件分别拷贝到相
应的目录下.&lt;/p&gt;

&lt;p&gt;一般执行完成make insatll后,直接使用动态链接库后,可能会报如下的错误:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./program_name: error while loading shared libraries: libcunit.so.1: cannot open shared object file: No such file or directory
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;解决方法:&lt;code&gt;sudo ldconfig&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Run ldconfig as root to update the cache - if that still doesn&amp;rsquo;t help, you need to add the path to the file ld.so.conf (just type it in on its own line) or better yet, add the entry to a new file (easier to delete) in directory ld.so.conf.d.&lt;/p&gt;

&lt;p&gt;如果出现如下的错误,干脆直接用&lt;code&gt;./configure --prefix=/usr/local&lt;/code&gt; 然后直接&lt;code&gt;make install&lt;/code&gt;搞定.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo ldconfig
/sbin/ldconfig.real: /usr/local/lib/libcunit.so.1 is not a symbolic link
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;交叉编译cunit&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./configure --host=arm-linux --enable-shared=no --disable-dependency-tracking --prefix=/home/CUnitHome
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;字体环境&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;monaco-font 
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;修改磁盘的卷标名称:34fe9f2d9cc3cd7e319ca75e7da08332&#34;&gt;修改磁盘的卷标名称&lt;/h2&gt;

&lt;h2 id=&#34;ext2-ext3-ext4:34fe9f2d9cc3cd7e319ca75e7da08332&#34;&gt;ext2/ext3/ext4&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;NAME
       e2label - Change the label on an ext2/ext3/ext4 filesystem

SYNOPSIS
       e2label device [ new-label ]

DESCRIPTION
       e2label will display or change the filesystem label on the ext2, ext3, or ext4 filesystem located on device.

       If the optional argument new-label is not present, e2label will simply display the current filesystem label.

       If  the  optional  argument new-label is present, then e2label will set the filesystem label to be new-label.  Ext2 filesystem labels can be at most 16 characters long; if new-label is longer than 16 characters, e2label will
       truncate it and print a warning message.

       It is also possible to set the filesystem label using the -L option of tune2fs(8).

AUTHOR
       e2label was written by Theodore Ts&#39;o (tytso@mit.edu).

AVAILABILITY
       e2label is part of the e2fsprogs package and is available from http://e2fsprogs.sourceforge.net.

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;例子&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ e2label /dev/sdb label_name
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;linuxmint17-2-中任务栏上应用程序窗口图标丢失问题:34fe9f2d9cc3cd7e319ca75e7da08332&#34;&gt;LinuxMint17.2 中任务栏上应用程序窗口图标丢失问题&lt;/h2&gt;

&lt;p&gt;这里所说的窗口图标即不是左边的快捷启动方式,也不是右边的系统托盘图标,而是正中间的那个点击后可以切换应用程序的窗口的图标,就是最小化到任务栏的图标还带有应用程序的标题.总之我莫名其妙的发现我每打开一个程序都不在任务栏之上,查看后台进程,却有我刚才打开的程序,后来经同事指点,原来是任务栏上有可以拖动的手柄,拖动后,拖到最大的位置,所有打开的程序都可以看见了,在Windows下任务栏是可以锁定的,但是在LinuxMint中找不到锁定的选项配置.&lt;/p&gt;

&lt;h2 id=&#34;linuxmint17-2-sudo不用输入密码的配置:34fe9f2d9cc3cd7e319ca75e7da08332&#34;&gt;LinuxMint17.2 sudo不用输入密码的配置&lt;/h2&gt;

&lt;p&gt;把 &lt;code&gt;/etc/sudoers&lt;/code&gt; 由&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#
# This file MUST be edited with the &#39;visudo&#39; command as root.
#
# Please consider adding local content in /etc/sudoers.d/ instead of
# directly modifying this file.
#
# See the man page for details on how to write a sudoers file.
#
Defaults    env_reset
Defaults    mail_badpass
Defaults    secure_path=&amp;quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&amp;quot;

# Host alias specification

# User alias specification

# Cmnd alias specification

# User privilege specification
root    ALL=(ALL:ALL) ALL

# Members of the admin group may gain root privileges
%admin ALL=(ALL) ALL

# Allow members of group sudo to execute any command
%sudo   ALL=(ALL:ALL) ALL

# See sudoers(5) for more information on &amp;quot;#include&amp;quot; directives:

#includedir /etc/sudoers.d
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;更改为&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#
# This file MUST be edited with the &#39;visudo&#39; command as root.
#
# Please consider adding local content in /etc/sudoers.d/ instead of
# directly modifying this file.
#
# See the man page for details on how to write a sudoers file.
#
Defaults    env_reset
Defaults    mail_badpass
Defaults    secure_path=&amp;quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&amp;quot;

# Host alias specification

# User alias specification

# Cmnd alias specification

# User privilege specification
root    ALL=(ALL:ALL) ALL

# Members of the admin group may gain root privileges
%admin ALL=(ALL) ALL

# Allow members of group sudo to execute any command
%sudo   ALL=(ALL:ALL) NOPASSWD:ALL

# See sudoers(5) for more information on &amp;quot;#include&amp;quot; directives:

#includedir /etc/sudoers.d
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>VirtualBox使用记录</title>
      <link>http://llxwj.github.io/post/virtualbox/</link>
      <pubDate>Sat, 17 Oct 2015 07:12:07 +0800</pubDate>
      
      <guid>http://llxwj.github.io/post/virtualbox/</guid>
      <description>

&lt;p&gt;#VirtualBox 5.0.0-101573试用&lt;/p&gt;

&lt;p&gt;最近一直使用的是VitualBox4.3.12-93733,Host系统是Windows7,Guest系统是LinuxMint17.1.使用覆盖安装的方法直接安装VirtualBox5.0.0,然后直接就把之前安装的Guest系统启动了,启动之后提示Guest Additions版本过低,直接就&amp;rdquo;安装增强组件的&amp;rdquo;方法.执行sudo ./VBoxLinuxAdditions.run,一切顺利后再重启进入Guest系统,这时候按下右Ctrl+F全屏,突然报出如下的错误,而虚拟机直接异常退出.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../../image/virtualbox/virtualbox-windows7-host-linuxmint171-guest-change-fullscreen-mode-failed.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;反复重启了几次,只要全屏都报这个问题,之后认为是不是5.0.0版本有Bug,这时就打算退回到4.3.x版本了,打算下载一个最新的4.3.x:VirtualBox-4.3.30-101610-Win.exe,这个版本使用直接覆盖安装了之后,还是不能全屏,全屏的时候也报错,注意,这时候没有安装VBoxGuestAdditions.iso,没办法就打算不用全屏模式了,开始一如既往的开发模式了.突然发现在剪切板在Host系统与Guest系统中不能共享了,这下才意识到更新虚拟机带进来了一些麻烦问题.&lt;/p&gt;

&lt;p&gt;没办法,只能恢复到原来版本的VitualBox了,再次覆盖安装Virtulbox4.3.12,安装完成后,再次启动虚拟机发现,虚拟机中图形驱动工作不正常了,就是虚拟机窗口最大化后,虚拟机的窗口没有跟着自动变大,这时候想起,Guest系统中运行的还是5.0.0的GuestAdditions,要把GuestAdditions的版本恢复到原来版本的,再次使用&amp;rdquo;安装增强组件&amp;rdquo;的方法安装时,报了一个严重的问题:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Error mounting /dev/sr0 at /media/lili/VBOXADDITIONS_4.3.12_93733: Command-line `mount -t &amp;quot;iso9660&amp;quot; -o &amp;quot;uhelper=udisks2,nodev,nosuid,uid=1000,gid=1000,iocharset=utf8,mode=0400,dmode=0500&amp;quot; &amp;quot;/dev/sr0&amp;quot; &amp;quot;/media/lili/VBOXADDITIONS_4.3.12_93733&amp;quot;&#39; exited with non-zero exit status 32: mount: unknown filesystem type &#39;iso9660&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样就不对了,之前虚拟机的光驱是可以自动挂载的,现在就有问题了:&lt;/p&gt;

&lt;p&gt;在网络上也有一些遇到的问题,不知道是否和我遇到的相同:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://forums.virtualbox.org/viewtopic.php?f=3&amp;amp;t=65460&#34;&gt;https://forums.virtualbox.org/viewtopic.php?f=3&amp;amp;t=65460&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://forums.virtualbox.org/viewtopic.php?f=3&amp;amp;t=67782&amp;amp;p=321318#p321318&#34;&gt;https://forums.virtualbox.org/viewtopic.php?f=3&amp;amp;t=67782&amp;amp;p=321318#p321318&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://askubuntu.com/questions/596998/unable-to-install-guest-additions-unknown-filesystem-type-iso9660&#34;&gt;http://askubuntu.com/questions/596998/unable-to-install-guest-additions-unknown-filesystem-type-iso9660&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;上面的链接提到了两个解决方法:&lt;/p&gt;

&lt;p&gt;第一个方法:
&amp;gt; I was able to resolve the mounting issue by the reinstalling the linux image:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;sudo apt-get install &amp;ndash;reinstall linux-image-$(uname -r)&lt;/p&gt;

&lt;p&gt;BTW, it all started with upgrading VirtualBox. Bidirectional clipboard stopped working so I tried to reinsert Guest Additions ISO. This caused above stuff. Now, Guest Additions are mounted back, but clipboard wtill doesn&amp;rsquo;t work&amp;hellip;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I had the same problems today (clipboard broken, no CD image would mount). Your solution plus reinstalling Guest Additions solves both. –  Mark Smith Apr 24 at 10:42&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;第二个方法:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Try manually mounting it:&lt;/p&gt;

&lt;p&gt;Open a terminal.
Type the following commands:&lt;/p&gt;

&lt;p&gt;sudo mount /dev/sr0 /mnt&lt;/p&gt;

&lt;p&gt;ls -l /mnt&lt;/p&gt;

&lt;p&gt;Then if the CD contents was shown, open /mnt in Nautilus (a.k.a File Manager) and intall the Guest Additions.&lt;/p&gt;

&lt;p&gt;If those steps didn&amp;rsquo;t work, try this:&lt;/p&gt;

&lt;p&gt;Download the guest additions ISO from the VM (via virtualbox website).
Right click on it &amp;ndash;&amp;gt; Open with&amp;hellip; &amp;ndash;&amp;gt; Disk image mounter.
Open the newly mounted disk.
&amp;gt;Hi Helio, I&amp;rsquo;ve tried both it didn&amp;rsquo;t work. The same error. Please see edited answer –  Oleg Shirokikh Mar 15 at 9:03&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;第一种方法没有试,但是感觉好像应该是能起作用的,第二种方法试过了,还是不行.&lt;/p&gt;

&lt;p&gt;在&lt;a href=&#34;http://bigamekiller.blog.sohu.com/159956812.html&#34;&gt;http://bigamekiller.blog.sohu.com/159956812.html&lt;/a&gt; 有如下的说明:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;出现mount: unknown filesystem type ‘iso9660′错误原因&lt;/p&gt;

&lt;p&gt;如果你使用mount 命令在linux下面挂载iso文件时，出现mount: unknown filesystem type ‘iso9660′错误。&lt;/p&gt;

&lt;p&gt;原因是：你的内核中没有支持ISO9660的模块。&lt;/p&gt;

&lt;p&gt;解决方法：你只要在root权限下登陆，升级你的内核就行了。&lt;/p&gt;

&lt;p&gt;以Ubuntu 为例：&lt;/p&gt;

&lt;p&gt;你可以运行以下命令：&lt;/p&gt;

&lt;p&gt;aptitude update&lt;/p&gt;

&lt;p&gt;aptitude upgrade&lt;/p&gt;

&lt;p&gt;然后用一下命令重启电脑：&lt;/p&gt;

&lt;p&gt;shut down -r now&lt;/p&gt;

&lt;p&gt;在此执行mount命令就可以 了。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;进入Windows7的软件卸载管理中,意外的发现有两个VirtualBox4.3.12与VirtualBox4.3.30,感觉是最后安装VirtualBox4.3.12的时候,没有自动把VirtualBox4.3.30卸载掉,执行了一下手动卸载4.3.30,再次启动虚拟机,打算进入Guest系统,这时候,故障又来了:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;未能启动虚拟电脑 LinuxMint2 ，由于下述物理网卡未找到:

Realtek PCIe GBE Family Controller (adapter 2), VirtualBox Host-Only Ethernet Adapter (adapter 3)。

你可修改虚拟电脑的网络设置或停用之。

重新安装后就可以解决。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;../../image/virtualbox/virtualbox-cannot-fount-adapter-interface.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;把4.3.12重新安装了之后,上面的问题就解决了,应该是4.3.30卸载的时候把虚拟机网卡组件都卸载了,重新安装后就全部又安装回来了.&lt;/p&gt;

&lt;p&gt;启动后的想法,就是通过某种方法,先把5.0.0的GuestAdditions卸载或恢复到4.3.12版本的,执行VirtualBox的Share folders时,发现也不能挂载了,报unknow devices.&lt;/p&gt;

&lt;p&gt;想到自己的开发机器上配置过NFS系统,可以把iso文件直接通过NFS系统上传到虚拟机中,之后经同事提醒,可以通过SSH登录上去,用scp直接把本地的文件上传到Guest系统中,用这个方法把ISO上传后,还是不能打开,但是能解压,直接解压后,为VBoxLiunxGuestAdditions.run添加可执行权限后,把GuestAdditions安装成功了,再次重启后发现
窗口还是没有自动变大.&lt;/p&gt;

&lt;p&gt;期间也试过用 sudo apt-get install virtualbox-guest-dkms 依然不能解决问题,现在感觉终于把一个开发用的Guest系统搞坏了.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../../image/virtualbox/virtualbox-device-driver-error.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;然后cat /proc/filesystems&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nodev   sysfs
nodev   rootfs
nodev   ramfs
nodev   bdev
nodev   proc
nodev   cgroup
nodev   cpuset
nodev   tmpfs
nodev   devtmpfs
nodev   debugfs
nodev   securityfs
nodev   sockfs
nodev   pipefs
nodev   anon_inodefs
nodev   devpts
    ext3
    ext2
    ext4
nodev   hugetlbfs
    vfat
nodev   ecryptfs
    fuseblk
nodev   fuse
nodev   fusectl
nodev   pstore
nodev   mqueue
nodev   vboxsf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;发现里边真的没有iso9660,怎么突然就没有了,不知道那里去了,下面是正常的:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nodev   sysfs
nodev   rootfs
nodev   ramfs
nodev   bdev
nodev   proc
nodev   cgroup
nodev   cpuset
nodev   tmpfs
nodev   devtmpfs
nodev   debugfs
nodev   securityfs
nodev   sockfs
nodev   pipefs
nodev   devpts
    ext3
    ext2
    ext4
nodev   hugetlbfs
    vfat
nodev   ecryptfs
    fuseblk
nodev   fuse
nodev   fusectl
nodev   pstore
nodev   mqueue
nodev   rpc_pipefs
nodev   nfs
nodev   nfs4
nodev   nfsd
nodev   binfmt_misc
nodev   vboxsf
    iso9660
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;期间还尝试过进入Recovery Mode,打算发现也没有作用,进入Recovery Mode的方法如下:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://forums.linuxmint.com/viewtopic.php?f=90&amp;amp;t=110111&#34;&gt;http://forums.linuxmint.com/viewtopic.php?f=90&amp;amp;t=110111&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hold shift during boot to get GRUB to show (it is hidden by default if you have but one operating system installed). In the GRUB menu you can choose the second option, which is the recovery mode. In recovery mode you will get a menu to select what you want to do. One of the options is to drop to a root console. After providing the root password (by default the same password as you gave for the user created during installation), you will be on a virtual console logged in as root.&lt;/p&gt;

&lt;p&gt;To make GRUB display by default, you need to change a little bit of configuration. Open a terminal, and type:&lt;/p&gt;

&lt;p&gt;sudo nano /etc/default/grub&lt;/p&gt;

&lt;p&gt;Comment the following lines in your file, by putting a # character in front of the line:&lt;/p&gt;

&lt;p&gt;GRUB_HIDDEN_TIMEOUT=0&lt;/p&gt;

&lt;p&gt;GRUB_HIDDEN_TIMEOUT_QUIET=true&lt;/p&gt;

&lt;p&gt;Then change the value after the = sign on the next line in your file, to whatever many seconds you want the GRUB menu to show and wait for you to press a key before it boots the default option. Personally, I&amp;rsquo;ve set it to 3 seconds. Enough to notice it is there, not enough to annoy me :wink:)&lt;/p&gt;

&lt;p&gt;GRUB_TIMEOUT=3&lt;/p&gt;

&lt;p&gt;Update these settings as needed and save &amp;amp; close the file (Ctrl+O, Enter, Ctrl+X). Then run:&lt;/p&gt;

&lt;p&gt;sudo update-grub2&lt;/p&gt;

&lt;p&gt;to commit the changes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;再次开机就能进入Grub菜单,可以选择Recovery Mode了.&lt;/p&gt;

&lt;p&gt;这里再提到一个关于开机自动挂载VirtualBox 的Share Folders的方法:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://forum.ubuntu.org.cn/viewtopic.php?f=86&amp;amp;t=399216&amp;amp;start=15&#34;&gt;http://forum.ubuntu.org.cn/viewtopic.php?f=86&amp;amp;t=399216&amp;amp;start=15&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Oracle VM VirtualBox如何自动挂载共享文件夹&lt;/p&gt;

&lt;p&gt;win7系统下，用Oracle VM VirtualBox虚拟安装了ubuntu 12.04。安装了增强功能包(Guest Additions)后，在Oracle VM VirtualBox的设置页面，设置了共享，如下图&lt;/p&gt;

&lt;p&gt;在ubuntu的终端，执行
代码:
sudo mkdir /mnt/share
sudo mount -t vboxsf router /mnt/share&lt;/p&gt;

&lt;p&gt;将router文件夹挂载到了mnt/share目录下。
不想每次开机都要重新挂载，如是修改了etc/fstab文件，添加
代码:
sharing /mnt/share vboxsf rw,gid=100,uid=1000,auto 0 0&lt;/p&gt;

&lt;p&gt;但是ubuntu重启后，每次还是得手动挂载。请大家指点一下！&lt;/p&gt;

&lt;p&gt;不是在分配共享空间时有个auto mount选项吗？&lt;/p&gt;

&lt;p&gt;win7系统下，用Oracle VM VirtualBox虚拟安装了ubuntu 12.04。安装了增强功能包(Guest Additions)后，在Oracle VM VirtualBox的设置页面，设置了共享，如下图
附件:
sshot-1.png
在ubuntu的终端，执行
代码:
sudo mkdir /mnt/share
sudo mount -t vboxsf router /mnt/share&lt;/p&gt;

&lt;p&gt;将router文件夹挂载到了mnt/share目录下。
不想每次开机都要重新挂载，如是修改了etc/fstab文件，添加
代码:
sharing /mnt/share vboxsf rw,gid=100,uid=1000,auto 0 0&lt;/p&gt;

&lt;p&gt;但是ubuntu重启后，每次还是得手动挂载。请大家指点一下！&lt;/p&gt;

&lt;p&gt;代码:
sharedfolder   /mnt/share  vboxsf defaults 0 0&lt;/p&gt;

&lt;p&gt;win7系统下，用Oracle VM VirtualBox虚拟安装了ubuntu 12.04。安装了增强功能包(Guest Additions)后，在Oracle VM VirtualBox的设置页面，设置了共享，如下图
附件:
附件 sshot-1.png 已经无效&lt;/p&gt;

&lt;p&gt;在ubuntu的终端，执行
代码:
sudo mkdir /mnt/share
sudo mount -t vboxsf router /mnt/share&lt;/p&gt;

&lt;p&gt;将router文件夹挂载到了mnt/share目录下。
不想每次开机都要重新挂载，如是修改了etc/fstab文件，添加
代码:
sharing /mnt/share vboxsf rw,gid=100,uid=1000,auto 0 0&lt;/p&gt;

&lt;p&gt;但是ubuntu重启后，每次还是得手动挂载。请大家指点一下！&lt;/p&gt;

&lt;p&gt;代码:
sharedfolder   /mnt/share  vboxsf defaults 0 0&lt;/p&gt;

&lt;p&gt;多谢回复，已经改成了sharedfolder /mnt/share vboxsf defaults 0 0，但是启动时有这样的错误提示
附件:
sshot-2.png
sshot-2.png [ 20.1 KiB | 被浏览 18644 次 ]&lt;/p&gt;

&lt;p&gt;router /mnt/share vboxsf defaults 0 0&lt;/p&gt;

&lt;p&gt;记忆中第一个参数应该是共享名的吧。&lt;/p&gt;

&lt;p&gt;郁闷，修改fastab的语句变成了
代码:
router /mnt/share vboxsf defaults 0 0&lt;/p&gt;

&lt;p&gt;后，虽然启动没有错误提示，但是进入ubuntu系统后，打开共享的文件夹，是空白，需要再执行
代码:
sudo mount -t vboxsf router /mnt/share&lt;/p&gt;

&lt;p&gt;才可以看到共享的文件夹里面的内容&lt;/p&gt;

&lt;p&gt;我也是这样,郁闷死了,我是的debian 下的virtualbox里再装个debian ,每次都要手动mount&lt;/p&gt;

&lt;p&gt;sharedfolder /mnt/share vboxsf defaults 0 0
或者
sharefolder /mnt/share vboxsf rw,gid=100,uid=1000,auto 0 0
都可以，
但是前提是要取消掉虚拟机设置里面的自动挂载选项。&lt;/p&gt;

&lt;p&gt;现在还需要输入vboxsf这样的命令行？&lt;/p&gt;

&lt;p&gt;win7系统下，用Oracle VM VirtualBox虚拟安装了ubuntu 12.04。安装了增强功能包(Guest Additions)后，在Oracle VM VirtualBox的设置页面，设置了共享，如下图
附件:
sshot-1.png
在ubuntu的终端，执行
代码:
sudo mkdir /mnt/share
sudo mount -t vboxsf router /mnt/share&lt;/p&gt;

&lt;p&gt;将router文件夹挂载到了mnt/share目录下。
不想每次开机都要重新挂载，如是修改了etc/fstab文件，添加
代码:
sharing /mnt/share vboxsf rw,gid=100,uid=1000,auto 0 0&lt;/p&gt;

&lt;p&gt;但是ubuntu重启后，每次还是得手动挂载。请大家指点一下！&lt;/p&gt;

&lt;p&gt;大部分网络资料都是说在 /etc/fstab 文件中追加
VirtualBox虚拟机文件夹共享挂载命令 “ sharing /mnt/share vboxsf defaults 0 0 ”，其实是错误的，
因为系统调用fstab的时候，Virtualbox的共享目录的模块还没有加载，所以每次加载都会失败，最终的解决方案如下：
在文件 /etc/rc.local 中（用root用户）追加如下命令
mount -t vboxsf sharing /mnt/share&lt;/p&gt;

&lt;p&gt;最后重启系统.&lt;/p&gt;

&lt;p&gt;为什么在文件 /etc/rc.local 中（用root用户）追加如下命令
mount -t vboxsf sharing /mnt/share
还是不行？&lt;/p&gt;

&lt;p&gt;为什么在文件 /etc/rc.local 中（用root用户）追加如下命令
mount -t vboxsf sharing /mnt/share
还是不行？&lt;/p&gt;

&lt;p&gt;我按照这个方法终于成功了。
我的主机系统是win8，之前也是因为虚拟系统无法挂载而纠结。&lt;/p&gt;

&lt;p&gt;建议在修改完文件后，先在vb上删除原共享文件夹的路径，重新选择连接一遍，再重启。我是这么做的，然后实现了自动加载&amp;hellip; :em05&lt;/p&gt;

&lt;p&gt;lipengwelcome 写道:
sharedfolder /mnt/share vboxsf defaults 0 0
或者
sharefolder /mnt/share vboxsf rw,gid=100,uid=1000,auto 0 0
都可以，
但是前提是要取消掉虚拟机设置里面的自动挂载选项。&lt;/p&gt;

&lt;p&gt;12楼是正解。刚才尝试的时候，在添加了“sharefolder /mnt/share vboxsf rw,gid=100,uid=1000,auto 0 0”的情况下，虚拟机自动挂载点上，开机后没有挂载；去掉以后再开机，就自动挂载了。&lt;/p&gt;

&lt;p&gt;win7系统下，用Oracle VM VirtualBox虚拟安装了ubuntu 12.04。安装了增强功能包(Guest Additions)后，在Oracle VM VirtualBox的设置页面，设置了共享，如下图
附件:
sshot-1.png
在ubuntu的终端，执行
代码:
sudo mkdir /mnt/share
sudo mount -t vboxsf router /mnt/share&lt;/p&gt;

&lt;p&gt;将router文件夹挂载到了mnt/share目录下。
不想每次开机都要重新挂载，如是修改了etc/fstab文件，添加
代码:
sharing /mnt/share vboxsf rw,gid=100,uid=1000,auto 0 0&lt;/p&gt;

&lt;p&gt;但是ubuntu重启后，每次还是得手动挂载。请大家指点一下！&lt;/p&gt;

&lt;p&gt;大部分网络资料都是说在 /etc/fstab 文件中追加
VirtualBox虚拟机文件夹共享挂载命令 “ sharing /mnt/share vboxsf defaults 0 0 ”，其实是错误的，
因为系统调用fstab的时候，Virtualbox的共享目录的模块还没有加载，所以每次加载都会失败，最终的解决方案如下：
在文件 /etc/rc.local 中（用root用户）追加如下命令
mount -t vboxsf sharing /mnt/share&lt;/p&gt;

&lt;p&gt;最后重启系统.&lt;/p&gt;

&lt;p&gt;使用这种方式成功.&lt;/p&gt;

&lt;p&gt;我也遇到这个问题，然后详细的查看了VBOX的帮助，终于发现的问题所在。
若在设置共享目录时勾选了“自动挂载”，则guest中的LINUX里什么都不用动，系统会自动在“/media”里建立以“sf_”为前缀并加上共享名的挂载点，比如你设置的共享名是“share”，那么这个挂载点就是“sf_share”，系统一启动就自动挂载好了。不过因为这个挂载点默认的权限是给vbox创建的用户组“vboxsf”的，你会无法查看，只需要修改“/etc/group”，把自己的用户名加入到“vboxsf”组就可以了。若这种情况下你又去手动修改“fstab”以实现自动挂载当然会失败。所以，若想通过“fstab”自动挂载，就要关掉共享目录设置中的“自动挂载”。因此不是什么读取“fstab”时vbox共享模块还没有加载，否则的话vbox这一“自动挂载”岂不太弱智了？呵呵。&lt;/p&gt;

&lt;p&gt;我也遇到这个问题，然后详细的查看了VBOX的帮助，终于发现的问题所在。
若在设置共享目录时勾选了“自动挂载”，则guest中的LINUX里什么都不用动，系统会自动在“/media”里建立以“sf_”为前缀并加上共享名的挂载点，比如你设置的共享名是“share”，那么这个挂载点就是“sf_share”，系统一启动就自动挂载好了。不过因为这个挂载点默认的权限是给vbox创建的用户组“vboxsf”的，你会无法查看，只需要修改“/etc/group”，把自己的用户名加入到“vboxsf”组就可以了。若这种情况下你又去手动修改“fstab”以实现自动挂载当然会失败。所以，若想通过“fstab”自动挂载，就要关掉共享目录设置中的“自动挂载”。因此不是什么读取“fstab”时vbox共享模块还没有加载，否则的话vbox这一“自动挂载”岂不太弱智了？呵呵。&lt;/p&gt;

&lt;p&gt;#UUID=db5269df-5822-4682-8b24-1eeca273aedc /home/lili/hi3716mv310 ext4    errors=remount-ro 0       1
/dev/sdb /home/lili/hi3716mv310 ext4    errors=remount-ro 0       1
share /home/lili/share vboxsf  rw,user,noauto,exec 0       1&lt;/p&gt;

&lt;h1 id=&#34;swap-was-on-dev-sda5-during-installation:30a5780e137d7dde12885b5bd5d17377&#34;&gt;swap was on /dev/sda5 during installation&lt;/h1&gt;
</description>
    </item>
    
    <item>
      <title>windows操作系统技巧合集</title>
      <link>http://llxwj.github.io/post/windows/</link>
      <pubDate>Sat, 17 Oct 2015 07:07:14 +0800</pubDate>
      
      <guid>http://llxwj.github.io/post/windows/</guid>
      <description>

&lt;h2 id=&#34;windows7安全模式下可以用msi卸载软件:3e44722f300b9d926b8a94aa7aeb0fd0&#34;&gt;Windows7安全模式下可以用MSI卸载软件&lt;/h2&gt;

&lt;p&gt;把下面这个语句写入到一个批处理中,在安全模式下用管理员权限导入到注册表中,就可以在安全模式下卸载软件了.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;reg add HKLM\SYSTEM\CurrentControlSet\Control\SafeBoot\Minimal\MSIServer /VE /T REG_SZ /F /D &amp;quot;Service&amp;quot; 
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;windows10-设置默认输入法:3e44722f300b9d926b8a94aa7aeb0fd0&#34;&gt;Windows10 设置默认输入法&lt;/h2&gt;

&lt;p&gt;我是从Win7中文版本升级到Win10的，默认只有中文输入法，每次打开浏览器，代码编辑
器输入代码的时候总是默认输入中文，感觉这个体验非常不好，想配置成默认输入英文的
，当我想输入中文的时候再手动切换到中文输入法。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;进入WIN10系统在桌面右角处点语言图标，在弹出来的菜单中选择语言首选项。&lt;/li&gt;
&lt;li&gt;点击&amp;rdquo;添加语言&amp;rdquo;按钮进入添加语言界面找到英语后打开,然后选择美语英语。&lt;/li&gt;
&lt;li&gt;添加后可以按WINI+Space验证是否能切换输入法.&lt;/li&gt;
&lt;li&gt;在电脑的右下角处点击输入法。然后再点语言首选项。&lt;/li&gt;
&lt;li&gt;更改语言首选项处，把英文语言上移到第一位就可以了。&lt;/li&gt;
&lt;li&gt;英文的输入法移动到第一位后就是默认输入法法了,当前的许多第三方输入不过也支持英文输入,不过不太方便使用,需要按SHIFT键进行切换。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在Win10下，按WIN + Space可以调出输入法切换菜单，在所有安装的输入法间切换。
切换为中文后，按Ctrl+Shift可以同类输入法间切换，在微软拼音输入法下，按
Ctrl+Space 则可以在中文与英文输入间切换，其他输入法下则不行。&lt;/p&gt;

&lt;h2 id=&#34;添加右键使用windows-defender扫描文件或文件夹:3e44722f300b9d926b8a94aa7aeb0fd0&#34;&gt;添加右键使用Windows Defender扫描文件或文件夹&lt;/h2&gt;

&lt;h3 id=&#34;添加:3e44722f300b9d926b8a94aa7aeb0fd0&#34;&gt;添加&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Windows Registry Editor Version 5.00

; Created by: winaero
; http://winaero.com

; Folder Scan

[HKEY_CLASSES_ROOT\Folder\shell\WindowsDefender]
&amp;quot;Icon&amp;quot;=&amp;quot;%ProgramFiles%\\\\Windows Defender\\\\EppManifest.dll&amp;quot;
&amp;quot;MUIVerb&amp;quot;=&amp;quot;使用Windows Defender扫描&amp;quot;

[HKEY_CLASSES_ROOT\Folder\shell\WindowsDefender\Command]
@=&amp;quot;cmd.exe /s /c \&amp;quot;\&amp;quot;C:\\Program Files\\Windows Defender\\MpCmdRun.exe\&amp;quot; -scan -scantype 3 -SignatureUpdate -file \&amp;quot;%1 \&amp;quot;\&amp;quot; &amp;amp; pause&amp;quot;

; File Scan

[HKEY_CLASSES_ROOT\*\shell\WindowsDefender]
&amp;quot;Icon&amp;quot;=&amp;quot;%ProgramFiles%\\\\Windows Defender\\\\EppManifest.dll&amp;quot;
&amp;quot;MUIVerb&amp;quot;=&amp;quot;使用Windows Defender扫描&amp;quot;

[HKEY_CLASSES_ROOT\*\shell\WindowsDefender\Command]
@=&amp;quot;cmd.exe /s /c \&amp;quot;\&amp;quot;C:\\Program Files\\Windows Defender\\MpCmdRun.exe\&amp;quot; -scan -scantype 3 -SignatureUpdate -file \&amp;quot;%1 \&amp;quot;\&amp;quot; &amp;amp; pause&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;移除:3e44722f300b9d926b8a94aa7aeb0fd0&#34;&gt;移除&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Windows Registry Editor Version 5.00

; Created by: winaero
; http://winaero.com

; Folder Scan

[-HKEY_CLASSES_ROOT\Folder\shell\WindowsDefender]


; File Scan

[-HKEY_CLASSES_ROOT\*\shell\WindowsDefender]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;securecrt-抓log的前置字符串配置:3e44722f300b9d926b8a94aa7aeb0fd0&#34;&gt;SecureCRT 抓Log的前置字符串配置&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;%M-%D %h:%m:%s:%t

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;无线有线同时上网自由选择连接线路:3e44722f300b9d926b8a94aa7aeb0fd0&#34;&gt;无线有线同时上网自由选择连接线路&lt;/h2&gt;

&lt;p&gt;转自卡饭论坛 &lt;a href=&#34;http://www.kafan.cn/edu/9426556.html&#34;&gt;无线有线同时上网自由选择连接线路&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;解决问题&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;首先查看路由表, 看到有两条默认路由，192.168.149.1是有线的，192.168.0.1是无线的：用命令&lt;code&gt;route print&lt;/code&gt;,
&lt;img src=&#34;../../image/windows/b963d0bb06f951f51e487b094c1f442b_thumb.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;可以看出最后两个路由的跃点数是不一样的，有线的是21，无线的是25，而电脑会首先选择从跃点小的线路走。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;问题很明确了，下面只需修改无线的跃点数，使它小于无线的跃点数，进入网络中心，选择无线网络-&amp;gt;属性-&amp;gt;ipv4-&amp;gt;属性-&amp;gt;高级-&amp;gt;添加，填入网关，跃点数设为1：
&lt;img src=&#34;../../image/windows/8ca817dcda5f9bc2294e4f96e111ef09.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;重新查看路由表，可以看到无线网络的跃点数已经修改为1，如下图：
&lt;img src=&#34;../../image/windows/437b039e3cca9e0240f213458672d1c3_thumb.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;跟踪一下路由，看究竟走的是哪个线路，可以看出，走的是192.168.0.1，即无线网络：用命令&lt;code&gt;tracert&lt;/code&gt;,
&lt;img src=&#34;../../image/windows/c037e30cda3fff47a5a79feba7fbdfd0_thumb.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;最后在有线无线共存的情况下，可以顺利通过无线上网。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;实际在操作的过程中不需要添加网关那一步，只需要在“高级”对话框中，把自动跃点数
的选项去掉，然后添加一个最小的跃点数1,最后确定退出，再查看路由，如果还是走有
线的话，把无线断开再重新连接一次即可。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;拼音加加输入法输入特殊符号的方法:3e44722f300b9d926b8a94aa7aeb0fd0&#34;&gt;拼音加加输入法输入特殊符号的方法&lt;/h2&gt;

&lt;p&gt;1.点击拼音加加输入法工具条,左击和右击都可以,在弹出的菜单中,选择&amp;rdquo;词库及自定义管理&amp;hellip;&amp;ldquo;,打开&amp;rdquo;加加 词库及自定义管理&amp;rdquo;对话框,选择&amp;rdquo;自定义编码词库&amp;rdquo;选项卡,点击最下方的&amp;rdquo;编辑自定义编码词库&amp;hellip;&amp;ldquo;的按钮,会打开一个文本文件&amp;rdquo;userword.txt&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;2.在这个文件的末尾追加下面的内容,然后保存退出,关闭对话框后,回到输入法中,就可以快捷的输入这些符号了,下面的内容来源于网络,方便快速的输入一些特殊符号&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;zyfh=ㄅㄆㄇㄈㄉㄊㄋㄌㄍㄎㄏㄐㄑㄒㄓㄔㄕㄖㄗㄘㄙㄧㄨㄩㄚㄛㄜㄝㄞ
      ㄟㄠㄡㄢㄣㄤㄥㄦ（注音符号）
sxfh=＋－＜＝＞±×÷∈∏∑∕√∝∞∟∠∣‖∧∨∩∪∫∮∴∵∶∷∽≈≌≈≠≡≤≥≤≥≮≯⊕⊙⊥⊿ (数学符号）
dxxl=ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ（大写希腊）
xxxl=αβγδεζηθικλμνξοπρστυφχψω（小写希腊）
dxew=АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮ
     ЯЁ（大写俄文）
xxew=абвгдежзийклмнопрстуфхцчшщъыьэю
     яё（小写俄文）
dwfh=㎎㎏㎜㎝㎞㎡㏄㏎㏑㏒㏕（单位符号）
dxlm=ⅠⅡⅢⅣⅤⅥⅦⅧⅨⅩⅪⅫ（大写罗马）
xxlm=ⅰⅱⅲⅳⅴⅵⅶⅷⅸⅹ（小写罗马）
fxjt=←↑→↓↖↗↘↙（方向箭头）
yqsz=①②③④⑤⑥⑦⑧⑨⑩（圆圈数字）
khsz=⑴⑵⑶⑷⑸⑹⑺⑻⑼⑽⑾⑿⒀⒁⒂⒃⒄⒅⒆⒇（括号数字）
szd=⒈⒉⒊⒋⒌⒍⒎⒏⒐⒑⒒⒓⒔⒕⒖⒗⒘⒙⒚⒛（数字点）
zwsz=一二三四五六七八九十（中文数字）
xxrw=ぁあぃいぅうぇえぉおかがきぎくぐけげこごさざしじすずせぜそぞただちぢっつづてでとどなにぬねのはばひびぴふぶぷへべぺほぼぽまみむめもゃやゅゆょよらりるれろゎわゐゑをん゛゜ゝゞ（小写日文）
dxrw=ァアィイゥウェエォオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂッツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモャヤュユョヨラリルレロヮワヰヱヲンヴヵヶーヽヾ（大写日文）
hbfh=＄￠￡￥¤（货币符号）
空格：kg=　，双空格：skg=　　，逗号：dh=，顿号：dh=、句号：jh=。
圆点：yd=·，间隔号：jgh=·，破折号：pzh=——，波浪号：blh=～
省略号：slh=……，单引号：dyh=‘，单引号：dyh=’，双引号：syh=“
双引号：syh=”，方括号：fkh=〔，方括号：fkh=〕，单书名号：dsmh=〈
单书名号：dsmh=〉，书名号：smh=《，书名号：smh=》，正负号：zfh=±
乘号：ch=×，除号：ch=÷，对比号：dbh=∶，五角星：wjx=☆
五角星：wjx=★，双竖线：ssx=‖，竖书名号：ssmh=『，竖书名号：ssmh=』
空心括号：kxkh=〖，空心括号：kxkh=〗，实心括号：sxkh=【
实心括号：sxkh=】，对勾：dg=√，约等于：ydy=≈，小于等于：xydy=≤
大于等于：dydy=≥，雄性符号：xxfh=♂，性别：xb=♂，雌性符号：cxfh=♀
性别：xb=♀，度：du=°，单撇号：dph=′，分：fen=′，双撇号：sph=″
秒：miao=″，摄氏度：ssd=℃，温度：wb=℃，美元：my=＄，英镑：yb=￡
千分号：qfh=‰，章节号：zjh=§，花叉号：hch=※，花a：ha=＠
左箭头：zjt=←，右箭头：yjt=→，上箭头：sjt=↑，下箭头：xjt=↓
叹号：th=！，井号：jing=＃，人民币：rmb=￥，百分号：bfh=％
and：and=＆，和：he=＆，圆括号：ykh=（，圆括号：ykh=），加号：jh=＋
减号：jh=－，斜杠：xg=／，冒号：mh=：，分号：fh=；，小于：xy=＜
大于：dy=＞，等于：dy=＝，问号：wh=？，大括号：dkh=｛
大括号：dkh=｝，PAI：pai=π，No：no=№，Num：num=№，序号：xh=№
圆圈：yq=○，圆圈：yq=●，菱形：lx=◇，菱形：lx=◆
方形：fk=□，方形：fk=■，三角形：sjx=△，三角形：sjx=▲
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3.我常用的组合&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;;（方向箭头）
jtz=←
jts=↑
jty=→
jtx=↓
jtzs=↖
jtys=↗
jtyx=↘
jtzx=↙
;（圆圈数字）
yqszy=①
yqsze=②
yqszs=③
yqszs=④
yqszw=⑤
yqszl=⑥
yqszq=⑦
yqszb=⑧
yqszj=⑨
yqszs=⑩
;（数字点）
szdy=⒈
szde=⒉
szds=⒊
szds=⒋
szdw=⒌
szdl=⒍
szdq=⒎
szdb=⒏
szdj=⒐
szds=⒑
szdsy=⒒
szdse=⒓
szdss=⒔
szdss=⒕
szdsw=⒖
szdsl=⒗
szdsq=⒘
szdsb=⒙
szds9=⒚
szdes=⒛
;括号数字
khszy=⑴
khsze=⑵
khszs=⑶
khszs=⑷
khszw=⑸
khszl=⑹
khszq=⑺
khszb=⑻
khszj=⑼
khszs=⑽
khszsy=⑾
khszse=⑿
khszss=⒀
khszss=⒁
khszsw=⒂
khszsl=⒃
khszsq=⒄
khszsb=⒅
khszsj=⒆
khszes=⒇
;省略号：
slh=……
;单引号：
dyh=‘
;单引号：
dyh=’
;双引号：
syh=“
;双引号：
syh=”
;方括号：
fkh=〔
;方括号：
fkh=〕
;单书名号：
dsmh=〈
;单书名号：
dsmh=〉
;书名号：
smh=《
;书名号：
smh=》
;正负号：
zfh=±
;乘号：
ch=×
;除号：
ch=÷
;对比号：
dbh=∶
;五角星：
wjx=☆
;五角星：
wjx=★
;双竖线：
ssx=‖
;竖书名号：
ssmh=『
;竖书名号：
ssmh=』
;空心括号：
kxkh=〖
;空心括号：
kxkh=〗
;实心括号：
sxkh=【
;实心括号：
sxkh=】
;对勾：
dg=√
;约等于：
ydy=≈
;小于等于：
xydy=≤
;大于等于：
dydy=≥
;雄性符号：
xxfh=♂
;性别：
xb=♂
;雌性符号：
cxfh=♀
;性别：
xb=♀
;度：
du=°
;单撇号：
dph=′
;分：
fen=′
;双撇号：
sph=″
;秒：
miao=″
;摄氏度：
ssd=℃
;温度：
wd=℃
;美元：
my=＄
;英镑：
yb=￡
;千分号：
qfh=‰
;章节号：
zjh=§
;花叉号：
hch=※
;花a：
ha=＠
;叹号：
th=！
;井号：
jing=＃
;人民币：
rmb=￥
;百分号：
bfh=％
;and：
and=＆
;和：
he=＆
;圆括号：
ykh=（
;圆括号：
ykh=）
;加号：
jh=＋
;减号：
jh=－
;斜杠：
xg=／
;冒号：
mh=：
;分号：
fh=；
;小于：
xy=＜
;大于：
dy=＞
;等于：
dy=＝
;问号：
wh=？
;大括号：
dkh=｛
;大括号：
dkh=｝
;PAI：
pai=π
;No：
no=№
;Num：
num=№
;序号：
xh=№
;圆圈：
yq=○
;圆圈：
yq=●
;菱形：
lx=◇
;菱形：
lx=◆
;方形：
fk=□
;方形：
fk=■
;三角形：
sjx=△
;三角形：
sjx=▲
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;4.拼音加加编码符号表&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://lijie.cai.swufe.edu.cn/pyjj/pyjjfhlb.HTM&#34;&gt;http://lijie.cai.swufe.edu.cn/pyjj/pyjjfhlb.HTM&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../../image/windows/pinyinjiajia_bian_ma_fu_hao_biao_1.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../../image/windows/pinyinjiajia_bian_ma_fu_hao_biao_2.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>